<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
namespace:名称空间，一般需要保持全局唯一  最好和dao层的java接口一致
可以映射 sql语句 到对应的方法名称和参数、返回类型
-->
<mapper namespace="net.xdclass.online_class.dao.VideoOrderMapper">
    <resultMap id="VideoOrderResultMap" type="VideoOrder">
        <id column="id" property="id" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="out_trade_no" property="outTradeNo" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="state" property="state" jdbcType="INTEGER" />
        <result column="total_fee" property="totalFee" jdbcType="INTEGER" />
        <result column="video_id" property="videoId" jdbcType="INTEGER" />
        <result column="video_title" property="videoTitle" jdbcType="VARCHAR" />
        <result column="video_img" property="videoImg" jdbcType="VARCHAR" />
        <!--
        association 配置属性一对一
        property 对应videoOrder里面的user属性名
        javaType 这个属性的类型
        -->
        <association property="user" javaType="User">
            <id column="uid" property="id" jdbcType="INTEGER"/>
            <result column="name" property="name" jdbcType="VARCHAR" />
            <result column="head_img" property="headImg" jdbcType="VARCHAR" />
            <result column="create_time" property="createTime"  jdbcType="TIMESTAMP"/>
            <result column="phone" property="phone" jdbcType="VARCHAR" />
        </association>
    </resultMap>

    <!--一对一管理查询订单  订单内部包含用户属性-->
    <select id="queryVideoOrderList" resultMap="VideoOrderResultMap">
        select
            o.id,
            o.user_id,
            o.out_trade_no,
            o.create_time,
            o.state,
            o.total_fee,
            o.video_id,
            o.video_title,
            o.video_img,
            u.id uid,
            u.name,
            u.head_img,
            u.create_time,
            u.phone
        from video_order o left join user u on o.user_id= u.id

    </select>


    <resultMap id="userOrderResultMap" type="User">
        <id column="id" property="id" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="head_img" property="headImg" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime"  jdbcType="TIMESTAMP"/>
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <!--
            property 填写pojo类中集合类属性的名称
            ofType 集合里面的pojo对象

        -->
        <collection property="videoOrderList" ofType="VideoOrder">
            <!--s配置主键,管理order的唯一标识-->
            <id column="order_id" property="id" />
            <result column="user_id" property="userId" jdbcType="INTEGER" />
            <result column="out_trade_no" property="outTradeNo" jdbcType="VARCHAR" />
            <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
            <result column="state" property="state" jdbcType="INTEGER" />
            <result column="total_fee" property="totalFee" jdbcType="INTEGER" />
            <result column="video_id" property="videoId" jdbcType="INTEGER" />
            <result column="video_title" property="videoTitle" jdbcType="VARCHAR" />
            <result column="video_img" property="videoImg" jdbcType="VARCHAR" />
        </collection>
    </resultMap>
    <select id="queryUserOrder" resultMap="userOrderResultMap">
        select
            u.id,
            u.name,
            u.head_img,
            u.create_time,
            u.phone,
            o.id order_id,
            o.user_id,
            o.out_trade_no,
            o.create_time,
            o.state,
            o.total_fee,
            o.video_id,
            o.video_title,
            o.video_img
            from user u  left join video_order o  on u.id = o.user_id
    </select>




             <!--懒加载-->

        <resultMap id="VideoOrderResultMapLazy" type="VideoOrder">
            <id column="id" property="id" />
            <result column="user_id" property="userId" jdbcType="INTEGER" />
            <result column="out_trade_no" property="outTradeNo" jdbcType="VARCHAR" />
            <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
            <result column="state" property="state" jdbcType="INTEGER" />
            <result column="total_fee" property="totalFee" jdbcType="INTEGER" />
            <result column="video_id" property="videoId" jdbcType="INTEGER" />
            <result column="video_title" property="videoTitle" jdbcType="VARCHAR" />
            <result column="video_img" property="videoImg" jdbcType="VARCHAR" />

            <association property="user" javaType="User" column="user_id" select="findUserByUserId"/>
        </resultMap>

        <select id="queryVideoOrderListLazy" resultMap="VideoOrderResultMapLazy">
        select
            o.id,
            o.user_id,
            o.out_trade_no,
            o.create_time,
            o.state,
            o.total_fee,
            o.video_id,
            o.video_title,
            o.video_img

        from video_order o

    </select>

        <select id="findUserByUserId" resultType="User">
            select * from user where id = #{id}
        </select>






</mapper>